<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TiledLib</name>
    </assembly>
    <members>
        <member name="T:TiledLib.Tile">
            <summary>
            A single tile in a TileLayer.
            </summary>
        </member>
        <member name="M:TiledLib.Tile.#ctor(Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Creates a new Tile object.
            </summary>
            <param name="texture">The texture that contains the tile image.</param>
            <param name="source">The source rectangle of the tile.</param>
        </member>
        <member name="M:TiledLib.Tile.#ctor(Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Rectangle,TiledLib.PropertyCollection)">
            <summary>
            Creates a new Tile object.
            </summary>
            <param name="texture">The texture that contains the tile image.</param>
            <param name="source">The source rectangle of the tile.</param>
            <param name="properties">The initial property collection or null to create an empty property collection.</param>
        </member>
        <member name="M:TiledLib.Tile.Clone">
            <summary>
            Creates a copy of the current tile.
            </summary>
            <returns>A new Tile with the same properties as the current tile.</returns>
        </member>
        <member name="M:TiledLib.Tile.DrawOrthographic(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Rectangle,System.Single)">
            <summary>
            Draws the tile with an orthographic perspective.
            </summary>
            <param name="spriteBatch">The SpriteBatch to use when rendering the tile.</param>
            <param name="destBounds">The destination bounds where the tile should be drawn.</param>
            <param name="opacity">The level of opacity to use when drawing the tile.</param>
        </member>
        <member name="P:TiledLib.Tile.Texture">
            <summary>
            Gets the Texture2D to use when drawing the tile.
            </summary>
        </member>
        <member name="P:TiledLib.Tile.Source">
            <summary>
            Gets the source rectangle of the tile.
            </summary>
        </member>
        <member name="P:TiledLib.Tile.Properties">
            <summary>
            Gets the collection of properties for the tile.
            </summary>
        </member>
        <member name="P:TiledLib.Tile.Color">
            <summary>
            Gets or sets a color associated with the tile.
            </summary>
        </member>
        <member name="T:TiledLib.PropertyCollection">
            <summary>
            An enumerable collection of properties.
            </summary>
        </member>
        <member name="M:TiledLib.PropertyCollection.#ctor">
            <summary>
            Creates a new PropertyCollection.
            </summary>
        </member>
        <member name="M:TiledLib.PropertyCollection.Add(TiledLib.Property)">
            <summary>
            Adds a property to the collection.
            </summary>
            <param name="property">The property to add.</param>
        </member>
        <member name="M:TiledLib.PropertyCollection.Remove(System.String)">
            <summary>
            Removes a property with the given name.
            </summary>
            <param name="name">The name of the property to remove.</param>
            <returns>True if the property was removed, false otherwise.</returns>
        </member>
        <member name="M:TiledLib.PropertyCollection.GetEnumerator">
            <summary>
            Gets an enumerator that can be used to iterate over the properties in the collection.
            </summary>
            <returns>An enumerator over the properties.</returns>
        </member>
        <member name="P:TiledLib.PropertyCollection.Item(System.String)">
            <summary>
            Gets a Property with the given name.
            </summary>
            <param name="name">The name of the property to retrieve.</param>
            <returns>The Property if a matching one is found or null if no Property exists for the given name.</returns>
        </member>
        <member name="T:TiledLib.MapObject">
            <summary>
            An arbitrary object placed on an ObjectLayer.
            </summary>
        </member>
        <member name="M:TiledLib.MapObject.#ctor(System.String,System.String)">
            <summary>
            Creates a new MapObject.
            </summary>
            <param name="name">The name of the object.</param>
            <param name="type">The type of object to create.</param>
        </member>
        <member name="M:TiledLib.MapObject.#ctor(System.String,System.String,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Creates a new MapObject.
            </summary>
            <param name="name">The name of the object.</param>
            <param name="type">The type of object to create.</param>
            <param name="bounds">The initial bounds of the object.</param>
        </member>
        <member name="M:TiledLib.MapObject.#ctor(System.String,System.String,Microsoft.Xna.Framework.Rectangle,TiledLib.PropertyCollection)">
            <summary>
            Creates a new MapObject.
            </summary>
            <param name="name">The name of the object.</param>
            <param name="type">The type of object to create.</param>
            <param name="bounds">The initial bounds of the object.</param>
            <param name="properties">The initial property collection or null to create an empty property collection.</param>
        </member>
        <member name="P:TiledLib.MapObject.Name">
            <summary>
            Gets the name of the object.
            </summary>
        </member>
        <member name="P:TiledLib.MapObject.Type">
            <summary>
            Gets the type of the object.
            </summary>
        </member>
        <member name="P:TiledLib.MapObject.Bounds">
            <summary>
            Gets or sets the bounds of the object.
            </summary>
        </member>
        <member name="P:TiledLib.MapObject.Properties">
            <summary>
            Gets a list of the object's properties.
            </summary>
        </member>
        <member name="T:TiledLib.MapObjectLayer">
            <summary>
            A layer comprised of objects.
            </summary>
        </member>
        <member name="T:TiledLib.Layer">
            <summary>
            An abstract base for a layer in a map.
            </summary>
        </member>
        <member name="P:TiledLib.Layer.Name">
            <summary>
            Gets the name of the layer.
            </summary>
        </member>
        <member name="P:TiledLib.Layer.Width">
            <summary>
            Gets the width (in tiles) of the layer.
            </summary>
        </member>
        <member name="P:TiledLib.Layer.Height">
            <summary>
            Gets the height (in tiles) of the layer.
            </summary>
        </member>
        <member name="P:TiledLib.Layer.Visible">
            <summary>
            Gets or sets the whether the layer is visible.
            </summary>
        </member>
        <member name="P:TiledLib.Layer.Opacity">
            <summary>
            Gets or sets the opacity of the layer.
            </summary>
        </member>
        <member name="P:TiledLib.Layer.Properties">
            <summary>
            Gets the list of properties for the layer.
            </summary>
        </member>
        <member name="M:TiledLib.MapObjectLayer.AddObject(TiledLib.MapObject)">
            <summary>
            Adds a MapObject to the layer.
            </summary>
            <param name="mapObject">The MapObject to add.</param>
        </member>
        <member name="M:TiledLib.MapObjectLayer.GetObject(System.String)">
            <summary>
            Gets a MapObject by name.
            </summary>
            <param name="objectName">The name of the object to retrieve.</param>
            <returns>The MapObject with the given name.</returns>
        </member>
        <member name="M:TiledLib.MapObjectLayer.RemoveObject(TiledLib.MapObject)">
            <summary>
            Removes an object from the layer.
            </summary>
            <param name="mapObject">The object to remove.</param>
            <returns>True if the object was found and removed, false otherwise.</returns>
        </member>
        <member name="M:TiledLib.MapObjectLayer.RemoveObject(System.String)">
            <summary>
            Removes an object from the layer.
            </summary>
            <param name="objectName">The name of the object to remove.</param>
            <returns>True if the object was found and removed, false otherwise.</returns>
        </member>
        <member name="P:TiledLib.MapObjectLayer.Color">
            <summary>
            Gets or sets this layer's color.
            </summary>
        </member>
        <member name="P:TiledLib.MapObjectLayer.Objects">
            <summary>
            Gets the objects on the current layer.
            </summary>
        </member>
        <member name="T:TiledLib.Property">
            <summary>
            A simple key-value property pair.
            </summary>
        </member>
        <member name="M:TiledLib.Property.#ctor(System.String,System.String)">
            <summary>
            Creates a new Property with a given name and initial value.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="value">The initial value of the property.</param>
        </member>
        <member name="M:TiledLib.Property.SetValue(System.Int32)">
            <summary>
            Sets the value of the property as an integer.
            </summary>
            <param name="value">The new value of the property.</param>
        </member>
        <member name="M:TiledLib.Property.SetValue(System.Single)">
            <summary>
            Sets the value of the property as a floating point number.
            </summary>
            <param name="value">The new value of the property.</param>
        </member>
        <member name="M:TiledLib.Property.SetValue(System.Boolean)">
            <summary>
            Sets the value of the property as a boolean.
            </summary>
            <param name="value">The new value of the property.</param>
        </member>
        <member name="M:TiledLib.Property.SetValue(System.String)">
            <summary>
            Sets the value of the property as a string.
            </summary>
            <param name="value">The new value of the property.</param>
        </member>
        <member name="P:TiledLib.Property.Name">
            <summary>
            Gets the name of the property.
            </summary>
        </member>
        <member name="P:TiledLib.Property.RawValue">
            <summary>
            Gets the raw value string of the property.
            </summary>
        </member>
        <member name="T:TiledLib.MapReader">
            <summary>
            Reads in a Map from an XNB through a ContentManager.
            </summary>
        </member>
        <member name="M:TiledLib.MapReader.Read(Microsoft.Xna.Framework.Content.ContentReader,TiledLib.Map)">
            <summary>
            Reads a map from the ContentReader.
            </summary>
            <param name="input">The ContentReader for reading the file.</param>
            <param name="existingInstance">The existing Map instance.</param>
            <returns>A new Map instance.</returns>
        </member>
        <member name="T:TiledLib.TileLayer">
            <summary>
            A map layer containing tiles.
            </summary>
        </member>
        <member name="P:TiledLib.TileLayer.Tiles">
            <summary>
            Gets the layout of tiles on the layer.
            </summary>
        </member>
        <member name="T:TiledLib.Orientation">
            <summary>
            Defines the possible orientations for a Map.
            </summary>
        </member>
        <member name="F:TiledLib.Orientation.Orthogonal">
            <summary>
            The tiles of the map are orthogonal.
            </summary>
        </member>
        <member name="F:TiledLib.Orientation.Isometric">
            <summary>
            The tiles of the map are isometric.
            </summary>
        </member>
        <member name="T:TiledLib.MapObjectFinder">
            <summary>
            A delegate used for searching for map objects.
            </summary>
            <param name="layer">The current layer.</param>
            <param name="mapObj">The current object.</param>
            <returns>True if this is the map object desired, false otherwise.</returns>
        </member>
        <member name="T:TiledLib.Map">
            <summary>
            A full map from Tiled.
            </summary>
        </member>
        <member name="M:TiledLib.Map.WorldPointToTileIndex(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Converts a point in world space into tile indices that can be used to index into a TileLayer.
            </summary>
            <param name="worldPoint">The point in world space to convert into tile indices.</param>
            <returns>A Point containing the X/Y indices of the tile that contains the point.</returns>
        </member>
        <member name="M:TiledLib.Map.GetAllObjects">
            <summary>
            Returns the set of all objects in the map.
            </summary>
            <returns>A new set of all objects in the map.</returns>
        </member>
        <member name="M:TiledLib.Map.FindObject(TiledLib.MapObjectFinder)">
            <summary>
            Finds an object in the map using a delegate.
            </summary>
            <remarks>
            This method is used when an object is desired, but there is no specific
            layer to find the object on. The delegate allows the caller to create 
            any logic they want for finding the object. A simple example for finding
            the first object named "goal" in any layer would be this:
            
            var goal = map.FindObject((layer, obj) => return obj.Name.Equals("goal"));
            
            You could also use the layer name or any other logic to find an object.
            The first object for which the delegate returns true is the object returned
            to the caller. If the delegate never returns true, the method returns null.
            </remarks>
            <param name="finder">The delegate used to search for the object.</param>
            <returns>The MapObject if the delegate returned true, null otherwise.</returns>
        </member>
        <member name="M:TiledLib.Map.FindObjects(TiledLib.MapObjectFinder)">
            <summary>
            Finds a collection of objects in the map using a delegate.
            </summary>
            <remarks>
            This method performs basically the same process as FindObject, but instead
            of returning the first object for which the delegate returns true, it returns
            a collection of all objects for which the delegate returns true.
            </remarks>
            <param name="finder">The delegate used to search for the object.</param>
            <returns>A collection of all MapObjects for which the delegate returned true.</returns>
        </member>
        <member name="M:TiledLib.Map.GetLayer(System.String)">
            <summary>
            Gets a layer by name.
            </summary>
            <param name="name">The name of the layer to retrieve.</param>
            <returns>The layer with the given name.</returns>
        </member>
        <member name="M:TiledLib.Map.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Performs a basic rendering of the map.
            </summary>
            <param name="spriteBatch">The SpriteBatch to use to render the map.</param>
        </member>
        <member name="M:TiledLib.Map.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Rectangle)">
            <summary>
            Draws an area of the map defined in world space (pixel) coordinates.
            </summary>
            <param name="spriteBatch">The SpriteBatch to use to render the map.</param>
            <param name="worldArea">The area of the map to draw in world coordinates.</param>
        </member>
        <member name="P:TiledLib.Map.Version">
            <summary>
            Gets the version of Tiled used to create the Map.
            </summary>
        </member>
        <member name="P:TiledLib.Map.Orientation">
            <summary>
            Gets the orientation of the map.
            </summary>
        </member>
        <member name="P:TiledLib.Map.Width">
            <summary>
            Gets the width (in tiles) of the map.
            </summary>
        </member>
        <member name="P:TiledLib.Map.Height">
            <summary>
            Gets the height (in tiles) of the map.
            </summary>
        </member>
        <member name="P:TiledLib.Map.TileWidth">
            <summary>
            Gets the width of a tile in the map.
            </summary>
        </member>
        <member name="P:TiledLib.Map.TileHeight">
            <summary>
            Gets the height of a tile in the map.
            </summary>
        </member>
        <member name="P:TiledLib.Map.Properties">
            <summary>
            Gets a list of the map's properties.
            </summary>
        </member>
        <member name="P:TiledLib.Map.Tiles">
            <summary>
            Gets a collection of all of the tiles in the map.
            </summary>
        </member>
        <member name="P:TiledLib.Map.Layers">
            <summary>
            Gets a collection of all of the layers in the map.
            </summary>
        </member>
        <member name="T:TiledLib.TileGrid">
            <summary>
            A 2D grid of Tile objects.
            </summary>
        </member>
        <member name="M:TiledLib.TileGrid.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a new TileGrid.
            </summary>
            <param name="width">The width of the grid.</param>
            <param name="height">The height of the grid.</param>
        </member>
        <member name="P:TiledLib.TileGrid.Item(System.Int32,System.Int32)">
            <summary>
            Gets or sets a Tile at a given index.
            </summary>
            <param name="x">The X index.</param>
            <param name="y">The Y index.</param>
            <returns></returns>
        </member>
        <member name="P:TiledLib.TileGrid.Width">
            <summary>
            Gets the width of the grid.
            </summary>
        </member>
        <member name="P:TiledLib.TileGrid.Height">
            <summary>
            Gets the height of the grid.
            </summary>
        </member>
    </members>
</doc>
